pipeline {
    agent any

    environment {
        TRUFFLE_IMAGE = 'trufflesecurity/trufflehog:latest'
        TRUFFLE_REPORT = 'trufflehog_report.json'
    }

    stages {

        stage('Preparaci√≥n - limpieza') {
            steps {
                echo "Workspace: ${WORKSPACE}"
                sh '''
                    rm -rf .trufflehog_test_repo
                    rm -f ${TRUFFLE_REPORT}
                '''
            }
        }

        stage('Crear repo de prueba con secreto realista') {
            steps {
                script {
                    sh '''
                        mkdir -p .trufflehog_test_repo
                        cd .trufflehog_test_repo
                        git init
                        git config user.email "jenkins@example.com"
                        git config user.name "Jenkins Bot"

                        echo "archivo sin secreto" > README.md
                        git add README.md
                        git commit -m "init"

                        # üî• Secreto que s√≠ detecta TruffleHog (sin validaci√≥n)
                        echo "password = SuperSecret123!" > secret.txt
                        echo "DB_PASS=supersecurepassword" >> secret.txt
                        git add secret.txt
                        git commit -m "add detectable fake secrets"

                        git log --oneline -n 3
                    '''
                    echo "Repositorio de prueba con secreto a√±adido correctamente."
                }
            }
        }

        stage('Scan con TruffleHog') {
            steps {
                script {
                    sh '''
                        set -o pipefail
                        docker run --rm \
                          -v $(pwd):/workspace \
                          -w /workspace \
                          trufflesecurity/trufflehog:latest \
                          filesystem --no-verification --json /workspace/.trufflehog_test_repo > trufflehog_report.json || true
                    '''
                    echo "TruffleHog ejecutado. Reporte generado en trufflehog_report.json"
                }
            }
        }

        stage('Analizar resultados del reporte') {
            steps {
                script {
                    def findings = sh(script: "grep -c 'DetectorType' trufflehog_report.json || true", returnStdout: true).trim()
                    echo "N√∫mero de hallazgos detectados: ${findings}"

                    if (findings.toInteger() > 0) {
                        echo "‚ö†Ô∏è Se detectaron posibles secretos en el repositorio."
                        sh "head -n 20 trufflehog_report.json || true"
                        currentBuild.result = 'UNSTABLE'
                    } else {
                        echo "‚úÖ No se detectaron secretos."
                    }
                }
            }
        }

        stage('Archivar reporte JSON') {
            steps {
                archiveArtifacts artifacts: "trufflehog_report.json", onlyIfSuccessful: false
                echo "Reporte archivado correctamente como artefacto."
            }
        }
    }

    post {
        always {
            echo "Fin del pipeline. Verifica los artefactos (trufflehog_report.json)."
        }
    }
}
